AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  IPPublica:
    Description: Ingrese su dirección IP publica (la encuentra aquí http://checkip.amazonaws.com/)
    Type: String
  KeyPair:
    Description: Seleccione el key pair que creó anteriormente.
    Type: AWS::EC2::KeyPair::KeyName
Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: Migracion-datos-VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: myVPC Internet Gateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: 'true'
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: Target Subnet

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public Route Table

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  NFSInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0cff7528ff583bf9a
      BlockDeviceMappings: 
      - DeviceName: "/dev/xvda"
        Ebs: 
          VolumeType: "standard"
          DeleteOnTermination: "true"
          VolumeSize: "8"
      SecurityGroupIds: 
        - !Ref NFSInstanceSecurityGroup
      SubnetId: !Ref PublicSubnet
      Tags:
        - Key: "Name"
          Value: "Servidor NFS"
      KeyName: !Ref KeyPair
      IamInstanceProfile: !Ref EC2InstanceProfile
      UserData:
        'Fn::Base64': 
          !Sub |
            #!/bin/sh
            yum update -y
            service nfs start
            echo "/mnt/nfs *(rw,sync,no_subtree_check,no_root_squash)" >> /etc/exports
            mkdir /mnt/nfs
            cd /mnt/nfs
            wget https://github.com/chadwickbureau/baseballdatabank/archive/master.zip
            unzip master.zip
            rm master.zip
            chmod 755 /mnt/nfs
            exportfs -a
            service nfs restart
            sudo yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
            sudo systemctl start amazon-ssm-agent
            sudo systemctl status amazon-ssm-agent

  ClientInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0cff7528ff583bf9a
      BlockDeviceMappings: 
      - DeviceName: "/dev/xvda"
        Ebs: 
          VolumeType: "standard"
          DeleteOnTermination: "true"
          VolumeSize: "8"
      SecurityGroupIds: 
        - !Ref ClientInstanceSecurityGroup
      SubnetId: !Ref PublicSubnet 
      Tags:
        - Key: "Name"
          Value: "Instancia cliente"
      KeyName: !Ref KeyPair
      IamInstanceProfile: !Ref EC2InstanceProfile
      UserData:
        'Fn::Base64': 
          !Sub |
            #!/bin/bash -xe 
            yum update -y
            sudo yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
            sudo systemctl start amazon-ssm-agent
            sudo systemctl status amazon-ssm-agent
            cd /home/ssm-user/
            mkdir nas
            wget https://github.com/chadwickbureau/baseballdatabank/archive/refs/tags/v2022.2.zip
            unzip v2022.2.zip
            mv /home/ssm-user/baseballdatabank-2022.2 /home/ssm-user/baseball-data-2021-version
            rm v2022.2.zip

  ClientInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Sub
            - '${IP}/32'
            - IP: !Ref IPPublica
      VpcId: !Ref VPC

  NFSInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable access to NFS ports and SSH.
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '2049'
        ToPort: '2049'
        SourceSecurityGroupId: !Ref ClientInstanceSecurityGroup
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        SourceSecurityGroupId: !Ref ClientInstanceSecurityGroup
      VpcId: !Ref VPC
  
  EC2Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: Ec2InstanceProfile
      Path: /
      Roles: 
       - !Ref EC2Role
Outputs:
  NFSInstancePrivateIP:
    Description: Instancia NFS direcccion IP privada
    Value: !GetAtt NFSInstance.PrivateIp
  ClientInstancePrivateIP:
    Description: Instancia cliente direcccion IP privada
    Value: !GetAtt ClientInstance.PrivateIp